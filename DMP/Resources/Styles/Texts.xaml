<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:DMP"
    xmlns:System="clr-namespace:System;assembly=mscorlib">
    
    <Style
        x:Key="DMPTextH1"
        BasedOn="{StaticResource BaseTextBlockStyle}"
        TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,6" />
        <Setter Property="FontSize" Value="25" />
        <Setter Property="FontWeight" Value="ExtraBold" />
    </Style>

    <!--  Base Style for TextBox  Key 줬다.  -->
    <Style
        x:Key="BaseTextBoxStyle" 
        BasedOn="{StaticResource BaseStyle}" TargetType="{x:Type TextBox}">
        <Setter Property="FontSize" Value="{StaticResource FontSizeSmaller}" />
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundVeryDarkBrush}" />
        <Setter Property="Padding" Value="4" />
        
        <Setter Property="Margin" Value="0,5,0,5" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="BorderBrush" Value="{StaticResource WordBlueBrush}" />
        <Setter Property="Background" Value="{StaticResource ForegroundLightBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid>
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Focusable="False"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden" />
                        </Border>
                        <TextBlock
                            x:Name="placeholder"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="Center"
                            FontFamily="{StaticResource LatoThin}"
                            Foreground="{StaticResource ForegroundDarkBrush}"
                            IsHitTestVisible="False"
                            Text="{TemplateBinding Tag}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF7EB4EA" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF569DE5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox" x:Key="MENU_TEXTBOX">
        <Setter Property="Padding" Value="50,10" />
        <Setter Property="Margin" Value="0,5" />
        <Setter Property="Background" Value="{StaticResource BackgroundVeryLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}" />
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
    </Style>
    <Style x:Key="SUB_MENU_TB_ROUND" 
           TargetType="TextBox">
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Width" Value="60" />
        <Setter Property="Margin" Value="2 2 2 2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox" >
                    <Border Padding="2" Margin="4 0 4 0" CornerRadius="5" 
                   x:Name="Bd" Background="Gray">
                        <ScrollViewer Name="PART_ContentHost"
                                          Margin="3 0 3 0" Control.FontSize="30" 
                                          HorizontalAlignment="Stretch"
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled">
                            <Setter Property="Panel.Background" TargetName="Bd">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{StaticResource BackDarkGray}" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="TextElement.Foreground">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{StaticResource ForeLight}" />
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <System:Boolean>False</System:Boolean>
                            </Trigger.Value>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate TargetType="TextBox" x:Key="rtb">
        <Border Padding="4 4 4 4" CornerRadius="5"  
                BorderThickness="1" BorderBrush="White" x:Name="Bd" Background="{TemplateBinding Panel.Background}">
            <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled">
                <Setter Property="Panel.Background" TargetName="Bd">
                    <Setter.Value>
                        <DynamicResource ResourceKey="{x:Static SystemColors.ControlBrushKey}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="TextElement.Foreground">
                    <Setter.Value>
                        <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <System:Boolean>False</System:Boolean>
                </Trigger.Value>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="TextBox" x:Key="LIST_MENU_BORDER_TEXTBOX">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeSmallest}" />
        <Setter Property="Margin" Value="-2" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="14" />
    </Style>
    
    <!--    TEXT BLOCK -->

    <Style TargetType="TextBlock" x:Key="REVIEW_TEXTBLOCK_STYLE">
        <Setter Property="FontSize" Value="{StaticResource FontSizeSmall}" />
        <Setter Property="Padding" Value="20 4 4 4" />
        <Setter Property="Foreground" Value="AntiqueWhite" />
        <Setter Property="VerticalAlignment" Value="Center" />
        
    </Style>
    
    <Style TargetType="TextBlock" x:Key="REVIEW_TEXTBLOCK_STYLE_H3">
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Foreground" Value="AntiqueWhite" />
    </Style>

    <Style TargetType="TextBlock" x:Key="MENU_TEXTBLOCK">
        <Setter Property="Foreground" Value="{StaticResource BackgroundVeryLightBrush}" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
    </Style>

    <!--  Base Style for PasswordBox  -->
    <!--
    <Style BasedOn="{StaticResource BaseStyle}" TargetType="{x:Type PasswordBox}">
        <Setter Property="FontSize" Value="{StaticResource FontSizeXXLarge}" />
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundVeryDarkBrush}" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="0,5,0,5" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="local:MonitorPasswordProperty.Value" Value="True" />
        <Setter Property="BorderBrush" Value="{StaticResource WordBlueBrush}" />
        <Setter Property="Background" Value="{StaticResource ForegroundLightBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid>
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Focusable="False"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden" />
                        </Border>
                        <TextBlock
                            x:Name="placeholder"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="Center"
                            FontFamily="{StaticResource LatoThin}"
                            FontSize="{TemplateBinding FontSize}"
                            Foreground="{StaticResource ForegroundDarkBrush}"
                            IsHitTestVisible="False"
                            Text="{TemplateBinding Tag}"
                            Visibility="{TemplateBinding local:HasTextProperty.Value,
                                                         Converter={local:BooleanToVisibilityConverter}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF7EB4EA" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF569DE5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
-->
    <!--  Button Spinner  -->
    <Style
        x:Key="SpinningText"
        BasedOn="{StaticResource BaseTextBlockStyle}"
        TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeXXLarge}" />
        <Setter Property="Text" Value="&#xf110;" />
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform />
            </Setter.Value>
        </Setter>

        <Style.Resources>
            <Storyboard x:Key="Spin">
                <DoubleAnimation
                    RepeatBehavior="Forever"
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                    From="0"
                    To="360"
                    Duration="0:0:2" />
            </Storyboard>
        </Style.Resources>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Name="SpinStoryBoard" Storyboard="{StaticResource Spin}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="SpinStoryBoard" />
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>